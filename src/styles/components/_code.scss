/* ------------------------------------ *\
   Code
\* ------------------------------------ */

$code-text-color: $text-color !default;
$code-border-color: rgba($code-text-color, 0.1) !default;

.c-#{$ns}-code-block,
.c-#{$ns}-code-block .c-#{$ns}-code {
  white-space: -moz-pre-wrap;
  white-space: -o-pre-wrap;
  white-space: pre-wrap;
  word-spacing: normal;
  word-break: break-word;
  word-wrap: break-word;
  border-radius: border-radius(large);
}

.c-#{$ns}-code {
  @include shadow-border(thin, $code-border-color);

  display: inline;
  margin: 0;
  padding: 1px h-spacing(xxsmall) 2px h-spacing(xxsmall);
  color: $code-text-color;
  text-align: left;
  font-family: typeface(mono);
  font-size: strip-unit(type-size(small)) + em;
  border-radius: border-radius(small);
  background-color: rgba(mix($background-color, $code-text-color, 98%), 0.95);

  @at-root .c-#{$ns}-code-block & {
    @include shadow-border(thick, $code-border-color);

    display: block;
    overflow-y: auto;
    overflow-x: auto;
    width: 100%;
    padding: v-spacing(medium) h-spacing(small);
    font-size: 1em;
  }
}

.c-#{$ns}-code-block {
  display: flex;
  font-size: type-size(xsmall);

  &:before {
    content: attr(data-code);
    position: absolute;
    margin: 0 0 0 -0.5em;
    padding: 1px 0.5em 0 0.5em;
    color: $background-color;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    font-family: typeface(heading);
    font-size: type-size(xxsmall);
    border-radius: border-radius(small);
    background-color: $code-text-color;
    transform: translate3d(h-spacing(small), -50%, 0);
  }

  &:not([data-code]) {
    &:before {
      display: none;
    }
  }
}
